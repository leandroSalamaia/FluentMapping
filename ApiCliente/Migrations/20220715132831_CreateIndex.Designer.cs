// <auto-generated />
using System;
using ApiCliente.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiCliente.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220715132831_CreateIndex")]
    partial class CreateIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiCliente.Models.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("TipoCliente")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("ApiCliente.Models.Contato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR(14)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR(14)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Contato", (string)null);
                });

            modelBuilder.Entity("ApiCliente.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Bairo")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR(15)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR(60)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("NVARCHAR(120)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR(15)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Endereco", (string)null);
                });

            modelBuilder.Entity("ApiCliente.Models.PessoaFisica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR(10)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataNascimento")
                        .HasMaxLength(10)
                        .HasColumnType("SMALLDATETIME");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.HasIndex(new[] { "CPF" }, "IX_CPF_Cliente")
                        .IsUnique();

                    b.HasIndex(new[] { "Nome" }, "IX_Nome_Cliente")
                        .IsUnique();

                    b.ToTable("PessoaFisica", (string)null);
                });

            modelBuilder.Entity("ApiCliente.Models.PessoaJuridica", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR(14)");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.HasIndex(new[] { "CNPJ" }, "IX_CNPJ_Cliente")
                        .IsUnique();

                    b.HasIndex(new[] { "Nome" }, "IX_Nome_Cliente")
                        .IsUnique()
                        .HasDatabaseName("IX_Nome_Cliente1");

                    b.ToTable("PessoaJuridica", (string)null);
                });

            modelBuilder.Entity("ApiCliente.Models.Contato", b =>
                {
                    b.HasOne("ApiCliente.Models.Cliente", "Cliente")
                        .WithMany("Contatos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Contato_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiCliente.Models.Endereco", b =>
                {
                    b.HasOne("ApiCliente.Models.Cliente", "Cliente")
                        .WithOne("Endereco")
                        .HasForeignKey("ApiCliente.Models.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Endereco_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiCliente.Models.PessoaFisica", b =>
                {
                    b.HasOne("ApiCliente.Models.Cliente", "Cliente")
                        .WithOne("PessoaFisica")
                        .HasForeignKey("ApiCliente.Models.PessoaFisica", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PessoaFisica_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiCliente.Models.PessoaJuridica", b =>
                {
                    b.HasOne("ApiCliente.Models.Cliente", "Cliente")
                        .WithOne("PessoaJuridica")
                        .HasForeignKey("ApiCliente.Models.PessoaJuridica", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_PessoaJuridica_Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("ApiCliente.Models.Cliente", b =>
                {
                    b.Navigation("Contatos");

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("PessoaFisica")
                        .IsRequired();

                    b.Navigation("PessoaJuridica")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
